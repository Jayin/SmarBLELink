{"version":3,"sources":["hex-array.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["\n\nvar lc = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\",\n          \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\"];\nvar uc = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\",\n          \"8\", \"9\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\"];\n\nfunction toHex(val, uppercase) {\n  var set = uppercase ? uc : lc;\n  return set[Math.floor(val / 16)] + set[val % 16];\n}\n\nfunction extend(obj, source) {\n  for (var key in source) {\n    if (obj[key] == undefined)\n      obj[key] = source[key];\n  }\n\n  return obj;\n}\n\nfunction toString(arr, opts) {\n  var defaultOpts = {\n    grouping: 0,\n    rowlength: 0,\n    uppercase: true,\n  };\n\n  if (opts == undefined)\n    opts = {}\n\n  opts = extend(opts, defaultOpts);\n\n  var str = \"\";\n  var group = 0, column = 0;\n  for (var i = 0; i < arr.length; ++i) {\n    str += toHex(arr[i], opts.uppercase);\n\n    if (i === arr.length - 1)\n      break;\n\n    if (opts.grouping > 0 && ++group === opts.grouping) {\n      group = 0;\n\n      if (opts.rowlength > 0 && ++column === opts.rowlength) {\n        column = 0;\n        str += \"\\n\";\n      }\n      else\n        str += \" \";\n    }\n  }\n\n  return str;\n}\n\nfunction fromString(str) {\n  str = str.toLowerCase().replace(/\\s/g, \"\");\n  if (str.length % 2 == 1)\n    str = \"0\" + str;\n\n  var len = Math.floor(str.length / 2);\n  var buffer = new Uint8Array(len);\n\n  var curr = -1;\n  for (var i = 0; i < str.length; ++i) {\n    var c = str[i];\n    var val = lc.indexOf(c);\n    if (val == -1)\n        throw Error(\"unexpected character\")\n\n    if (curr === -1) {\n      curr = 16 * val;\n    } else {\n      buffer[Math.floor(i / 2)] = curr + val;\n      curr = -1;\n    }\n  }\n\n  return buffer;\n}\n\nexports.toString = toString;\nexports.fromString = fromString;\n"]}